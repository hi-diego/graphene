// <auto-generated />
using System;
using GrapheneTemplate.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GrapheneTemplate.Database.Migrations
{
    [DbContext(typeof(GrapheneCache))]
    [Migration("20230825090955_AddProductPreferenceProductId")]
    partial class AddProductPreferenceProductId
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("GrapheneTemplate.Database.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("alias");

                    b.Property<int>("Category")
                        .HasColumnType("int")
                        .HasColumnName("category");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<int?>("Plan")
                        .HasColumnType("int")
                        .HasColumnName("plan");

                    b.Property<Guid>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("uid")
                        .HasDefaultValueSql("(uuid())");

                    b.HasKey("Id")
                        .HasName("pk_companies");

                    b.HasIndex("Alias")
                        .IsUnique();

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Uid")
                        .IsUnique();

                    b.ToTable("companies");
                });

            modelBuilder.Entity("GrapheneTemplate.Database.Models.CompanyUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("company_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_at");

                    b.Property<int>("Role")
                        .HasColumnType("int")
                        .HasColumnName("role");

                    b.Property<Guid>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("uid")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_company_users");

                    b.HasIndex("CompanyId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Uid")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("company_users");
                });

            modelBuilder.Entity("GrapheneTemplate.Database.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("BuyerId")
                        .HasColumnType("int")
                        .HasColumnName("buyer_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("HandledById")
                        .HasColumnType("int")
                        .HasColumnName("handled_by_id");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int?>("SellerId")
                        .HasColumnType("int")
                        .HasColumnName("seller_id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<Guid>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("uid")
                        .HasDefaultValueSql("(uuid())");

                    b.HasKey("Id")
                        .HasName("pk_orders");

                    b.HasIndex("BuyerId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("HandledById");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("ProductId");

                    b.HasIndex("SellerId");

                    b.HasIndex("Uid")
                        .IsUnique();

                    b.ToTable("orders");
                });

            modelBuilder.Entity("GrapheneTemplate.Database.Models.OrderProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("comments");

                    b.Property<int?>("ConfirmedById")
                        .HasColumnType("int")
                        .HasColumnName("confirmed_by_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_at");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<double>("Quantity")
                        .HasColumnType("double")
                        .HasColumnName("quantity");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<Guid>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("uid")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("unit");

                    b.HasKey("Id")
                        .HasName("pk_order_products");

                    b.HasIndex("ConfirmedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.HasIndex("Uid")
                        .IsUnique();

                    b.ToTable("order_products");
                });

            modelBuilder.Entity("GrapheneTemplate.Database.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<bool>("Available")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("available");

                    b.Property<string>("Category")
                        .HasColumnType("longtext")
                        .HasColumnName("category");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<int?>("OfferedById")
                        .HasColumnType("int")
                        .HasColumnName("offered_by_id");

                    b.Property<string>("Packaging")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("packaging");

                    b.Property<double>("Price")
                        .HasColumnType("double")
                        .HasColumnName("price");

                    b.Property<string>("Subcategory")
                        .HasColumnType("longtext")
                        .HasColumnName("subcategory");

                    b.Property<Guid>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("uid")
                        .HasDefaultValueSql("(uuid())");

                    b.HasKey("Id")
                        .HasName("pk_products");

                    b.HasIndex("CreatedById");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("OfferedById");

                    b.HasIndex("Uid")
                        .IsUnique();

                    b.ToTable("products");
                });

            modelBuilder.Entity("GrapheneTemplate.Database.Models.ProductPreference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("BuyerId")
                        .HasColumnType("int")
                        .HasColumnName("buyer_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<string>("DefaultComment")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("default_comment");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    b.Property<double>("Max")
                        .HasColumnType("double")
                        .HasColumnName("max");

                    b.Property<double>("Min")
                        .HasColumnType("double")
                        .HasColumnName("min");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<Guid>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("uid")
                        .HasDefaultValueSql("(uuid())");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("unit");

                    b.HasKey("Id")
                        .HasName("pk_product_preferences");

                    b.HasIndex("BuyerId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("ProductId");

                    b.HasIndex("Uid")
                        .IsUnique();

                    b.ToTable("product_preferences");
                });

            modelBuilder.Entity("GrapheneTemplate.Database.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("password");

                    b.Property<Guid>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("uid")
                        .HasDefaultValueSql("(uuid())");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Uid")
                        .IsUnique();

                    b.ToTable("users");
                });

            modelBuilder.Entity("GrapheneTemplate.Database.Models.CompanyUser", b =>
                {
                    b.HasOne("GrapheneTemplate.Database.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_company_users_companies_company_id");

                    b.HasOne("GrapheneTemplate.Database.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_company_users_user_user_id");

                    b.Navigation("Company");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GrapheneTemplate.Database.Models.Order", b =>
                {
                    b.HasOne("GrapheneTemplate.Database.Models.Company", "Buyer")
                        .WithMany()
                        .HasForeignKey("BuyerId")
                        .HasConstraintName("fk_orders_companies_buyer_id");

                    b.HasOne("GrapheneTemplate.Database.Models.User", "CreatedBy")
                        .WithMany("OrderHistory")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("fk_orders_user_created_by_id");

                    b.HasOne("GrapheneTemplate.Database.Models.User", "HandledBy")
                        .WithMany("HandledOrders")
                        .HasForeignKey("HandledById")
                        .HasConstraintName("fk_orders_user_handled_by_id");

                    b.HasOne("GrapheneTemplate.Database.Models.Product", null)
                        .WithMany("Orders")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("fk_orders_product_product_id");

                    b.HasOne("GrapheneTemplate.Database.Models.Company", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerId")
                        .HasConstraintName("fk_orders_companies_seller_id");

                    b.Navigation("Buyer");

                    b.Navigation("CreatedBy");

                    b.Navigation("HandledBy");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("GrapheneTemplate.Database.Models.OrderProduct", b =>
                {
                    b.HasOne("GrapheneTemplate.Database.Models.User", "ConfirmedBy")
                        .WithMany()
                        .HasForeignKey("ConfirmedById")
                        .HasConstraintName("fk_order_products_user_confirmed_by_id");

                    b.HasOne("GrapheneTemplate.Database.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("fk_order_products_user_created_by_id");

                    b.HasOne("GrapheneTemplate.Database.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .HasConstraintName("fk_order_products_orders_order_id");

                    b.HasOne("GrapheneTemplate.Database.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .HasConstraintName("fk_order_products_product_product_id");

                    b.Navigation("ConfirmedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("GrapheneTemplate.Database.Models.Product", b =>
                {
                    b.HasOne("GrapheneTemplate.Database.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("fk_products_user_created_by_id");

                    b.HasOne("GrapheneTemplate.Database.Models.Company", "OfferedBy")
                        .WithMany("Products")
                        .HasForeignKey("OfferedById")
                        .HasConstraintName("fk_products_companies_offered_by_id");

                    b.Navigation("CreatedBy");

                    b.Navigation("OfferedBy");
                });

            modelBuilder.Entity("GrapheneTemplate.Database.Models.ProductPreference", b =>
                {
                    b.HasOne("GrapheneTemplate.Database.Models.Company", "Buyer")
                        .WithMany()
                        .HasForeignKey("BuyerId")
                        .HasConstraintName("fk_product_preferences_companies_buyer_id");

                    b.HasOne("GrapheneTemplate.Database.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("fk_product_preferences_user_created_by_id");

                    b.HasOne("GrapheneTemplate.Database.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .HasConstraintName("fk_product_preferences_products_product_id");

                    b.Navigation("Buyer");

                    b.Navigation("CreatedBy");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("GrapheneTemplate.Database.Models.Company", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("GrapheneTemplate.Database.Models.Product", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("GrapheneTemplate.Database.Models.User", b =>
                {
                    b.Navigation("HandledOrders");

                    b.Navigation("OrderHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
